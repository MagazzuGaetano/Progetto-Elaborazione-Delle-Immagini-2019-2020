% APPROCCIO:
    % trovo la scatola (sse non è presente mi fermo)
    % determino se è quadrata o rettangolare
    % trovo i "presunti" cioccolatini
        % elimino i cerchi esterni alla scatola
        % elimino i cerchi overlappati
        % ricostruisco io alcuni cerchi
    % assumiamo i cioccolatini siano circolari
    % se la scatola è rettangolare
        % costruisco una griglia
        % classifico i cioccolatini come (1,2,3,4) classi:
            % - 1 bianchi
            % - 2 dorati
            % - 3 neri
            % - 4 rigetto
         % trovo eventuali posizioni errate
         % conto cioccolatini
         % conto bollini
    % se la scatola e quadrata
        % classifico i cioccolatini come (1,2) classi:
            % - 1 dorati
            % - 2 rigetto
        % conto cioccolatini
        % conto bollini
    % ritorno un valore logico 0-1
    % mostro gli eventuali errori trovati


--------------------------------------------------------------------------


DA IMPLEMENTARE:

- normalizzare le features
- documentazione varia
- generare dati dai cerchi trovati e etichettarli
- migliorare i classificatori

- migliorare la scelta del range di [rmin, rmax] (dovrebbe essere apposto)
- fixare overlap (dovrebbe essere apposto)
- migliorare radius alla fine della find_cioccolatini
- valutare se è meglio lasciare lo sfondo nero o bianco per trovare i cerchi (il nero era meglio)

- per scatole rettangolari:
    - ricostruire eventuali cerchi mancanti
    - check errori

- per scatole quadrate:
    - ringrandire i cerchi(quando vedo se c'è il bollino)
    - check errori (come dico dove è l'errore? problemi dovuti classe di rigetto)

- dire se è conforme o no


--------------------------------------------------------------------------

DA STUDIARE/SPIEGARE:
 - resize (bicubic interpolation)
 - canny edge (spiegare le soglie)
 - morfologia (motivare gli strel):
    - imfill
    - imopen
    - imdilate
 - bwareafilt
 - bwconvhull
 
 - regionprops (guardare come si calcolano le feature?)
 
 - imadjust (spiegare gli spazi colori usati)
 - adapthisteq
 - imfindcircles (motivare i parametri raggio, sensitività e soglia)
 - clustering gerarchico
  
  shape-classifier:
    - perchè uso un KNN e non un altro classificatore?
    - perchè uso l'eccentricità e non un altra feature?
    - mostrare lo spazio delle features
    - mostrare metriche per valutazione (matrice di confusione, ROC)
  
  c_cn-classifier:
    - perchè uso un KNN e non un altro classificatore?
    - perchè uso CEDD(Color and Edge Direction Descriptor) e non un altra feature?
    - mostrare lo spazio delle features
    - mostrare metriche per valutazione (matrice di confusione, ROC)
  
  choco-classifier:
    - perchè uso un KNN e non un altro classificatore?
    - perchè uso CEDD(Color and Edge Direction Descriptor) e non un altra feature?
    - mostrare lo spazio delle features
    - mostrare metriche per valutazione (matrice di confusione, ROC)
